(progn (defvar TestList  (quote   (1 2 3))) (defvar test 0) (defvar knowleges_new nil) (defun print-spaces  (n s)  (dotimes   (i n)   (write-string " " s))) (defun program-line-Height nil  (+ FontHeight 4)) (defun editprg nil  (setq knowleges_new   (list-editor knowleges))) (defun savewsp nil  (save-image "test_program.img")) (defun loadwsp nil  (load-image)) (defvar MainProgram  (quote   (progn TestList test    (with-gfx     (str)     (cls)     (defvar test2 "TestString")     (fill-rect 10 90 200 100      (rgb 255 0 255))     (fill-circle 200 100 50      (rgb 255 0 0))     (draw-circle 100 130 50      (rgb 0 0 255))     (set-text-color      (rgb 255 255 255) 0)     (set-cursor 20 20)     (set-text-color      (rgb 0 255 0) 0)     (write-string "=== micro-Lisp ===" str)     (set-cursor 0 200)     (setq knowleges_new      (list-editor knowleges))     (if      (consp knowleges_new)      (save-program knowleges_new "test_program_ret.l")))))))